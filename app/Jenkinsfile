pipeline {
    agent any

    stages {
        stage("Pre-Build"){
            steps {
                sh "docker-compose down"
                sh 'docker run -d -t --name mongotest -p 27017:27017 mongo'
            }
        }
        stage('Build-Client') {
            steps {
                dir("app/client") {
                    sh "pwd"
                    sh 'whoami'
                    sh "npm install"
                }
            }
        }
        stage('Test-Client') {
            steps {
                echo '--------------------------> Starting Client Tests'
                dir("app/client") {
                    
                    sh 'npm run test'
                }
            }
        }
        stage('Build-Server') {
            steps {
                dir("app/server") {
                    sh "pwd"
                    sh "npm install"
                    //sh "npm install dotenv"
                    //sh 'npm audit fix'
                }
                //dir("app/server/python"){
                //    sh 'python -m pip install -r requirments.txt'
                //    sh 'python mongo.py'
                //}
            }
        }
        stage('Test-Server') {
            steps {
                echo '--------------------------> Starting Jest Server Tests'
                dir("app/server") {
                    
                    sh 'npm run test'
                }
            }
        }
        stage('Deploy Confirmation') {
            steps 
            {
                input "Do you want to deploy the Application?"
            }
        }
        stage("Deploy") {
            steps {
                sh "docker container stop mongotest"
                sh "docker container rm mongotest"
                sh 'docker build . -t todo'
                sh "docker-compose up -d"
            }
        }
    }
    post {  
         always {  
             echo 'This will always run'  
         }  
         success {  
             echo 'This will run only if successful. GEIL'  
         }  
         failure {  
              echo 'FAIL' //mail bcc: '', body: "<b>Example</b><br>Project: ${env.JOB_NAME} <br>Build Number: ${env.BUILD_NUMBER} <br> URL de build: ${env.BUILD_URL}", cc: '', charset: 'UTF-8', from: 'jenkinsbot@web.de', mimeType: 'text/html', replyTo: '', subject: "ERROR CI: Project name -> ${env.JOB_NAME}", to: "jenkinsbot@web.de";  
         }  
         unstable {  
             echo 'This will run only if the run was marked as unstable'  
         }  
         changed {  
             echo 'This will run only if the state of the Pipeline has changed'  
             echo 'For example, if the Pipeline was previously failing but is now successful'  
         }  
     }  
}
